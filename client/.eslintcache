[{"/Users/javipart/Develop/keybe/client/src/index.js":"1","/Users/javipart/Develop/keybe/client/src/reportWebVitals.js":"2","/Users/javipart/Develop/keybe/client/src/App.js":"3","/Users/javipart/Develop/keybe/client/src/pages/Index.js":"4","/Users/javipart/Develop/keybe/client/src/components/Form.js":"5","/Users/javipart/Develop/keybe/client/src/api/usersApi.js":"6","/Users/javipart/Develop/keybe/client/src/api/index.js":"7","/Users/javipart/Develop/keybe/client/src/api/roomsApi.js":"8","/Users/javipart/Develop/keybe/client/src/api/socketApi.js":"9","/Users/javipart/Develop/keybe/client/src/components/Chat.js":"10","/Users/javipart/Develop/keybe/client/src/models/events.js":"11","/Users/javipart/Develop/keybe/client/src/pages/Agent.js":"12","/Users/javipart/Develop/keybe/client/src/api/agentsApi.js":"13","/Users/javipart/Develop/keybe/client/src/components/CheckTicket.js":"14","/Users/javipart/Develop/keybe/client/src/api/ticketsApi.js":"15","/Users/javipart/Develop/keybe/client/src/components/AddTicket.js":"16"},{"size":500,"mtime":1610496060130,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610496060131,"results":"19","hashOfConfig":"18"},{"size":348,"mtime":1610721555720,"results":"20","hashOfConfig":"18"},{"size":4268,"mtime":1610943326314,"results":"21","hashOfConfig":"18"},{"size":1728,"mtime":1610663397421,"results":"22","hashOfConfig":"18"},{"size":157,"mtime":1610639805518,"results":"23","hashOfConfig":"18"},{"size":278,"mtime":1610639350016,"results":"24","hashOfConfig":"18"},{"size":437,"mtime":1610724113089,"results":"25","hashOfConfig":"18"},{"size":1016,"mtime":1610931644212,"results":"26","hashOfConfig":"18"},{"size":2153,"mtime":1610945710023,"results":"27","hashOfConfig":"18"},{"size":89,"mtime":1610720811633,"results":"28","hashOfConfig":"18"},{"size":7829,"mtime":1610946239612,"results":"29","hashOfConfig":"18"},{"size":154,"mtime":1610721576854,"results":"30","hashOfConfig":"18"},{"size":714,"mtime":1610940930595,"results":"31","hashOfConfig":"18"},{"size":242,"mtime":1610941048912,"results":"32","hashOfConfig":"18"},{"size":1655,"mtime":1610944470525,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"bpxtmh",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/javipart/Develop/keybe/client/src/index.js",[],["70","71"],"/Users/javipart/Develop/keybe/client/src/reportWebVitals.js",[],"/Users/javipart/Develop/keybe/client/src/App.js",[],"/Users/javipart/Develop/keybe/client/src/pages/Index.js",["72","73","74","75","76","77","78"],"/Users/javipart/Develop/keybe/client/src/components/Form.js",["79","80"],"import React, { useEffect, useState } from 'react';\n\nimport {\n  Button,\n  Grid,\n  TextField,\n} from '@material-ui/core';\n\nimport {\n  Send\n} from '@material-ui/icons';\n\nconst Form = ({ form, handleForm, saveForm }) => {\n\n\n  return (\n    <Grid\n      container\n      spacing={2}\n    >\n      <Grid\n        item xs={12}\n        sm container\n      >\n        <Grid item container direction='column' spacing={2}>\n          <Grid item xs>\n            <TextField\n              id={'name'}\n              label={'Nombre'}\n              value={form.name}\n              onChange={handleForm}\n              fullWidth\n            />\n            <Grid item xs>\n              <TextField\n                id={'lastName'}\n                label={'Apellido'}\n                value={form.lastName}\n                onChange={handleForm}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                id={'doc'}\n                label={'Documento'}\n                value={form.id}\n                onChange={handleForm}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                id={'phone'}\n                label={'Celular'}\n                value={form.phone}\n                onChange={handleForm}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs style={{ textAlign: 'right' }}>\n              <Button\n                endIcon={<Send />}\n                color=\"primary\"\n                onClick={saveForm}\n              >\n                Iniciar\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Form;","/Users/javipart/Develop/keybe/client/src/api/usersApi.js",["81"],"import { instance, apiGetData } from './index';\n\nexport default class {\n  static save(data) {\n    return instance.post('users', data).then(apiGetData);\n  }\n}","/Users/javipart/Develop/keybe/client/src/api/index.js",[],"/Users/javipart/Develop/keybe/client/src/api/roomsApi.js",["82"],"/Users/javipart/Develop/keybe/client/src/api/socketApi.js",[],"/Users/javipart/Develop/keybe/client/src/components/Chat.js",["83","84","85","86"],"/Users/javipart/Develop/keybe/client/src/models/events.js",[],"/Users/javipart/Develop/keybe/client/src/pages/Agent.js",["87","88","89"],"import React, { useEffect, useMemo, useState } from 'react';\n\nimport {\n  Typography, Button, Fab,\n  Grid, Card, Paper,\n  TextField, List, ListItem,\n  ListItemIcon, Avatar, ListItemText,\n  Divider,\n  IconButton,\n  ListItemSecondaryAction,\n  Dialog,\n  Badge,\n} from '@material-ui/core';\n\nimport {\n  Send, PostAdd,\n} from '@material-ui/icons';\nimport ListIcon from '@material-ui/icons/List';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport agentsApi from '../api/agentsApi';\nimport roomsApi from '../api/roomsApi';\nimport { disconnectSocket, initSocket, subscribeRooms, subscribeToChat } from '../api/socketApi';\nimport ticketsApi from '../api/ticketsApi';\nimport AddTicket from '../components/AddTicket';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: '100%',\n    height: '80vh'\n  },\n  headBG: {\n    backgroundColor: '#e0e0e0'\n  },\n  borderRight500: {\n    borderRight: '1px solid #e0e0e0',\n    overflowY: 'auto'\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'auto'\n  }\n});\n\nconst Index = () => {\n  const [allRooms, setAllRooms] = useState([]);\n  const [idChat, setIdChat] = useState(false);\n  const [allMessages, setAllMessages] = useState([]);\n  const [agentDoc, setAgentDoc] = useState('');\n  const [agent, setAgent] = useState(null);\n  const [allUsers, setAllUsers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [data, setData] = useState({\n    transmitter: '',\n    message: '',\n  });\n  const [dataTicket, setDataTicket] = useState({\n    userId: '',\n    userCreate: '',\n    userUpdate: '',\n    details: '',\n  });\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setAgentDoc(value);\n  };\n\n  const agentLogin = () => {\n    agentsApi.get(agentDoc).then((result) => {\n      const { success, data: agent } = result;\n      if (data) {\n        setAgent(agent);\n        setDataTicket({ ...dataTicket, userCreate: agent['_id'] });\n        roomsApi.getAgentRooms(agent['_id']).then((result) => {\n          const { success, data: rooms } = result;\n          setData({ ...data, transmitter: agent['_id'] });\n          const users = rooms.map(user => user.user);\n          setAllUsers(users);\n          setAllRooms(rooms);\n        })\n      }\n    })\n  }\n  let component = (\n    <div style={{\n      position: 'absolute',\n      bottom: '50%',\n      right: '50%',\n    }}>\n      <Card>\n        <Grid container>\n          <Grid item xs={12} >\n            <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\n            <Typography variant=\"h5\" className=\"header-message\">Agente</Typography>\n          </Grid>\n        </Grid>\n        <TextField\n          id={'doc'}\n          label={'Documento'}\n          value={agentDoc}\n          onChange={handleChange}\n          fullWidth\n        />\n        <Button onClick={agentLogin}>\n          Ingresar\n        </Button>\n      </Card>\n    </div>\n  );\n\n  const classes = useStyles();\n\n  const pushMessage = (data) => {\n    setAllMessages(messages => [...messages, data]);\n  };\n\n  const pushRoom = (data) => {\n    setAllRooms(rooms => [...rooms, data]);\n  };\n\n  useMemo(() => {\n    if (idChat) {\n      initSocket();\n      subscribeToChat(idChat, pushMessage);\n      return () => {\n        disconnectSocket();\n      };\n    }\n  }, [idChat]);\n\n  useEffect(() => {\n    initSocket();\n    subscribeRooms(pushRoom);\n    return () => {\n      disconnectSocket();\n    };\n  }, []);\n\n  const sendMessage = (data) => {\n    roomsApi.pushMessage(data).then(() => {\n      setData({ ...data, message: '' });\n    });\n  };\n\n  const saveTicket = () => {\n    ticketsApi.save(dataTicket).then(() => {\n      setShowModal(false);\n    })\n  }\n\n  useMemo(() => {\n    if (idChat) {\n      roomsApi.getRoom(idChat).then((result) => {\n        const { success, data } = result;\n        setAllMessages(data.chat)\n      });\n    }\n  }, [idChat])\n\n  return (\n    <div>\n      {agent ?\n        <>\n          <Grid container>\n            <Grid item xs={12} >\n              <Typography variant=\"h5\" className=\"header-message\">Agente</Typography>\n            </Grid>\n          </Grid>\n          <Grid container component={Paper} className={classes.chatSection}>\n            <Grid item xs={5} className={classes.borderRight500}>\n              <List>\n                <ListItem button key=\"RemySharp\">\n                  <ListItemIcon>\n                    <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\n                  </ListItemIcon>\n                  <ListItemText primary={agent.name}></ListItemText>\n                  <ListItemSecondaryAction>\n                    Crear Ticket\n                    <IconButton onClick={() => setShowModal(true)}>\n                      <PostAdd />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              </List>\n              <Divider />\n              <Grid item xs={12} style={{ padding: '10px' }}>\n                Listado de tickets\n                <IconButton>\n                  <ListIcon />\n                </IconButton>\n              </Grid>\n              <Divider />\n              <List className={classes.messageArea}>\n                {allRooms.map((item, index) => (\n                  <ListItem button key={item['_id']} onClick={() => setIdChat(item['_id'])}>\n                    <ListItemIcon>\n                      <Badge variant={'dot'} color={'secondary'}>\n                        <Avatar alt=\"img\" src={`https://material-ui.com/static/images/avatar/${index + 1}.jpg`} />\n                      </Badge>\n                    </ListItemIcon>\n                    <ListItemText primary={`${item.user.name} ${item.user.lastName}`}>{`${item.user.name} $${item.user.lastName}`}</ListItemText>\n                  </ListItem>\n                ))}\n              </List>\n            </Grid>\n            <Grid item xs={7}>\n              <List className={classes.messageArea}>\n                {allMessages.map((item, index) => (\n                  <ListItem key={index}>\n                    <Grid container style={{ backgroundColor: agent['_id'] === item.transmitter ? '#FCE2DC' : '#DCEFFC' }}>\n                      <Grid item xs={12}>\n                        <ListItemText align={agent['_id'] === item.transmitter ? \"right\" : \"left\"} primary={item.message}></ListItemText>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <ListItemText align={agent['_id'] === item.transmitter ? \"left\" : \"right\"} secondary={item.date}></ListItemText>\n                      </Grid>\n                    </Grid>\n                  </ListItem>\n                ))}\n              </List>\n              <Divider />\n              <Grid container style={{ padding: '5px' }}>\n                <Grid item xs={11}>\n                  <TextField\n                    id=\"outlined-basic-email\"\n                    label=\"Mensaje\"\n                    fullWidth\n                    value={data.message}\n                    onChange={(e) =>\n                      setData({ ...data, message: e.target.value })\n                    } />\n                </Grid>\n                <Grid xs={1} align=\"right\">\n                  <Fab color=\"primary\" aria-label=\"add\" onClick={() => sendMessage({\n                    id: idChat,\n                    data,\n                  })}><Send /></Fab>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n        : component}\n      <Dialog\n        open={showModal}\n        onClose={() => setShowModal(false)}\n      >\n        <AddTicket\n          users={allUsers}\n          setDataTicket={setDataTicket}\n          dataTicket={dataTicket}\n          saveTicket={saveTicket}\n          setShowModal={setShowModal}\n        />\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Index;","/Users/javipart/Develop/keybe/client/src/api/agentsApi.js",["90"],"/Users/javipart/Develop/keybe/client/src/components/CheckTicket.js",["91","92"],"/Users/javipart/Develop/keybe/client/src/api/ticketsApi.js",["93"],"/Users/javipart/Develop/keybe/client/src/components/AddTicket.js",["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":3,"nodeType":"102","messageId":"103","endLine":5,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":6,"column":3,"nodeType":"102","messageId":"103","endLine":6,"endColumn":9},{"ruleId":"100","severity":1,"message":"105","line":6,"column":25,"nodeType":"102","messageId":"103","endLine":6,"endColumn":28},{"ruleId":"100","severity":1,"message":"106","line":6,"column":30,"nodeType":"102","messageId":"103","endLine":6,"endColumn":34},{"ruleId":"100","severity":1,"message":"107","line":10,"column":3,"nodeType":"102","messageId":"103","endLine":10,"endColumn":7},{"ruleId":"100","severity":1,"message":"108","line":25,"column":3,"nodeType":"102","messageId":"103","endLine":25,"endColumn":18},{"ruleId":"100","severity":1,"message":"109","line":28,"column":7,"nodeType":"102","messageId":"103","endLine":28,"endColumn":9},{"ruleId":"100","severity":1,"message":"110","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"111","line":1,"column":28,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":3,"column":1,"nodeType":"114","endLine":7,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":3,"column":1,"nodeType":"114","endLine":18,"endColumn":2},{"ruleId":"100","severity":1,"message":"110","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"115","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":10},{"ruleId":"100","severity":1,"message":"104","line":6,"column":3,"nodeType":"102","messageId":"103","endLine":6,"endColumn":9},{"ruleId":"100","severity":1,"message":"116","line":13,"column":3,"nodeType":"102","messageId":"103","endLine":13,"endColumn":8},{"ruleId":"100","severity":1,"message":"117","line":74,"column":15,"nodeType":"102","messageId":"103","endLine":74,"endColumn":22},{"ruleId":"100","severity":1,"message":"117","line":79,"column":19,"nodeType":"102","messageId":"103","endLine":79,"endColumn":26},{"ruleId":"100","severity":1,"message":"117","line":158,"column":17,"nodeType":"102","messageId":"103","endLine":158,"endColumn":24},{"ruleId":"112","severity":1,"message":"113","line":3,"column":1,"nodeType":"114","endLine":7,"endColumn":2},{"ruleId":"100","severity":1,"message":"110","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"118","line":10,"column":3,"nodeType":"102","messageId":"103","endLine":10,"endColumn":7},{"ruleId":"112","severity":1,"message":"113","line":3,"column":1,"nodeType":"114","endLine":10,"endColumn":2},{"ruleId":"100","severity":1,"message":"110","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"119","line":15,"column":3,"nodeType":"102","messageId":"103","endLine":15,"endColumn":7},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'Menu' is defined but never used.","'sendMessageChat' is defined but never used.","'io' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration","'io' is defined but never used.","'Paper' is defined but never used.","'success' is assigned a value but never used.","'Send' is defined but never used.","'Save' is defined but never used.","no-global-assign","no-unsafe-negation"]